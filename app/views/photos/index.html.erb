<% @photos.each do |photo| %>
  <div class="row">
    <div class="col-sm-offset-1 col-sm-2">
      <div class="media">
        <div class="media-left">
          <%= link_to image_tag("https://identicons.github.com/#{photo.owner.email.split('@').first}.png", :width => 50, :class => "media-object"), "#" %>

        </div>
        <div class="media-body">
          <h4 class="media-heading"><%= photo.owner.email %></h4>
          <%= time_ago_in_words(photo.created_at) %> ago
        </div>
      </div>
    </div>
    <div class="col-sm-6">
      <div class="panel panel-default">
        <div class="panel-body">
          <%= link_to image_tag(photo.image, :class => "img-responsive"), photo %>
          <p class="lead">
            <%= photo.caption %>
          </p>
          <div class="btn-group btn-group-justified" role="group">
            <% favoriting = Favoriting.find_by({ :favorited_by_id => current_user.id, :photo_id => photo.id }) %>
            <% if favoriting.present? %>
              <%= link_to "Unfavorite", favoriting, :method => "delete", :class => "btn btn-default" %>
            <% else %>
              <%= link_to "Favorite", favoritings_url(:favoriting => { :photo_id => photo.id }), :method => "post", :class => "btn btn-default" %>
            <% end %>

            <% if current_user == photo.owner %>
              <%= link_to "Edit", edit_photo_url(photo), :class => "btn btn-default" %>
              <%= link_to "Delete", photo, :method => "delete", :class => "btn btn-default", :data => { :confirm => "Are you sure?" } %>
            <% end %>
          </div>
          <ul class="media-list">
            <% photo.comments.each do |comment| %>
              <li class="media">
                <div class="media-left">
                  <%= link_to image_tag("https://identicons.github.com/#{comment.commenter.email.split('@').first}.png", :width => 50, :class => "media-object"), "#" %>
                </div>
                <div class="media-body">
                  <h4 class="media-heading"><%= comment.commenter.email %></h4>
                  <%= comment.content %>
                </div>
              </li>
            <% end %>

            <li class="list-group-item">
              <%= form_for Comment.new(:photo_id => photo.id) do |f| %>
                <%= f.hidden_field :photo_id %>
                <%= f.text_field :content, :class => "form-control", :placeholder => "Add a comment" %>
              <% end %>
            </li>
          </ul>
        </div>
      </div>
    </div>
  </div>
<% end %>


<div class="page-header">
  <h1>
    Photos
    <%= link_to icon('plus'), new_photo_path, class: "btn btn-lg btn-success" %>
  </h1>
</div>

<!-- Responsive, Isotope-based layout example -->

<div class="row">
  <div class="col-xs-12">
    <input type="text" id="quicksearch" placeholder="Search Photos (start typing)" class="form-control">
  </div>
</div>

<hr>

<div class="row isotope-container">
<% @photos.each do |photo| %>
  <div class="col-xs-12 col-sm-6 col-md-4 col-lg-3 isotope-item">
    <div class="panel panel-default">
      <div class="panel-heading">
        <h3 class="panel-title">Photo #<%= photo.id %></h3>
      </div>
      <div class="panel-body">
        <dl>
          <dt>Caption</dt>
          <dd><%= photo.caption %></dd>

          <dt>Owner</dt>
          <dd><%= photo.owner_id %></dd>

        </dl>
        <div class="btn-group btn-group-justified">
          <%= link_to icon('search-plus'), photo, class: "btn btn-primary" %>

          <%= link_to icon('edit'), edit_photo_url(photo), class: "btn btn-warning" %>

          <%= link_to icon('trash-o'), photo, method: :delete, data: { confirm: "Do you really want to delete this photo?" }, class: "btn btn-danger" %>
        </div>
      </div>
    </div>
  </div>
<% end %>
</div>

<!-- JavaScript for Isotope layout and quicksearch -->
<script src="//cdnjs.cloudflare.com/ajax/libs/jquery.imagesloaded/3.1.8/imagesloaded.pkgd.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/jquery.isotope/2.0.0/isotope.pkgd.min.js"></script>
<script>
  $(function() {
    // quick search regex
    var qsRegex;

    // init Isotope
    var $container = $('.isotope-container');

    $container.imagesLoaded(function() {
      $container.isotope({
        itemSelector: '.isotope-item',
        layoutMode: 'masonry',
        filter: function() {
          return qsRegex ? $(this).text().match( qsRegex ) : true;
        }
      })
    });

    // use value of search field to filter
    var $quicksearch = $('#quicksearch').keyup( debounce( function() {
      qsRegex = new RegExp( $quicksearch.val(), 'gi' );
      $container.isotope();
    }, 200 ) );

  });

  // debounce so filtering doesn't happen every millisecond
  function debounce( fn, threshold ) {
    var timeout;
    return function debounced() {
      if ( timeout ) {
        clearTimeout( timeout );
      }
      function delayed() {
        fn();
        timeout = null;
      }
      timeout = setTimeout( delayed, threshold || 100 );
    }
  }
</script>

<!-- End responsive, Isotope-based layout example -->
